/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package university_mgt_system;

import java.sql.Connection;
import java.awt.Font;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author Baddest
 */
public class enter_grades extends javax.swing.JFrame {

    /**
     * Creates new form enter_grades
     */
    public enter_grades() {
        initComponents();
        course_id.setVisible(false);
        fetchStudentDetails();
                
}
    Connection conn;
    PreparedStatement pst;  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txt_othername = new javax.swing.JTextField();
        course_id = new javax.swing.JLabel();
        txt_mat_no = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_year = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txt_school = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_department = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_program = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCoursesGrades = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("Student_ID");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setText("Student_Name");

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt_othername.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txt_othername.setForeground(new java.awt.Color(0, 0, 102));
        txt_othername.setEnabled(false);
        txt_othername.setFocusable(false);

        course_id.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                course_idComponentHidden(evt);
            }
        });

        txt_mat_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_mat_noFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_mat_noFocusLost(evt);
            }
        });
        txt_mat_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_mat_noKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel9.setText("Year");

        txt_year.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txt_year.setForeground(new java.awt.Color(0, 0, 102));
        txt_year.setEnabled(false);
        txt_year.setFocusable(false);

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter Semester Grades");

        lblStatus.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(48, 111, 48));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Return/Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(430, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(16, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel10.setText("School");

        txt_school.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txt_school.setForeground(new java.awt.Color(0, 0, 102));
        txt_school.setEnabled(false);
        txt_school.setFocusable(false);

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel11.setText("Department");

        txt_department.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txt_department.setForeground(new java.awt.Color(0, 0, 102));
        txt_department.setEnabled(false);
        txt_department.setFocusable(false);
        txt_department.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_departmentActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel12.setText("Program of Study");

        txt_program.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txt_program.setForeground(new java.awt.Color(0, 0, 102));
        txt_program.setEnabled(false);
        txt_program.setFocusable(false);

        tblCoursesGrades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "COURSE ID", "COURSE CODE", "COURSE NAME", "CREDIT HOURS", "GRADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCoursesGrades);
        if (tblCoursesGrades.getColumnModel().getColumnCount() > 0) {
            tblCoursesGrades.getColumnModel().getColumn(0).setResizable(false);
            tblCoursesGrades.getColumnModel().getColumn(0).setPreferredWidth(1);
            tblCoursesGrades.getColumnModel().getColumn(1).setResizable(false);
            tblCoursesGrades.getColumnModel().getColumn(1).setPreferredWidth(1);
            tblCoursesGrades.getColumnModel().getColumn(2).setResizable(false);
            tblCoursesGrades.getColumnModel().getColumn(3).setResizable(false);
            tblCoursesGrades.getColumnModel().getColumn(3).setPreferredWidth(1);
            tblCoursesGrades.getColumnModel().getColumn(4).setResizable(false);
            tblCoursesGrades.getColumnModel().getColumn(4).setPreferredWidth(2);
        }

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Save Changes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Generate Report");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(course_id, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txt_mat_no, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel3))
                                        .addComponent(txt_school))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txt_othername)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel9)
                                            .addGap(18, 18, 18)
                                            .addComponent(txt_year, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txt_department))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_program, javax.swing.GroupLayout.DEFAULT_SIZE, 869, Short.MAX_VALUE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_othername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_mat_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_school, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txt_department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(course_id, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txt_program, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_departmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_departmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_departmentActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Main_Menu ob = new Main_Menu();
        ob.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_mat_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mat_noKeyPressed
        // TODO add your handling code here:
        txt_mat_no.addKeyListener(new KeyAdapter(){
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER){
                    fetchStudentDetails();
                    loadCoursesForStudent();
                }
            }

        });
    }//GEN-LAST:event_txt_mat_noKeyPressed

    private void txt_mat_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_mat_noFocusLost
        // TODO add your handling code here:
        txt_mat_no.addFocusListener(new FocusAdapter(){
            @Override
            public void focusLost(FocusEvent e){
                fetchStudentDetails();
            }
        });

    }//GEN-LAST:event_txt_mat_noFocusLost

    private void txt_mat_noFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_mat_noFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mat_noFocusGained

    private void course_idComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_course_idComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_course_idComponentHidden

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        saveGrades();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        updateGrades();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String studentID =txt_mat_no.getText();
        if(!studentID.isEmpty()){
            generateStudentReport(studentID);
        }else {
        JOptionPane.showMessageDialog(null, "Please Enter a valid student ID");
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    //Report
    public void generateStudentReport(String studentID){
         try {
             // Database connection
           Conn con = new Conn();
            // Path to the compiled Jasper file
            String reportPath = "C:\\Users\\Baddest\\OneDrive\\Documents\\NetBeansProjects\\University_Mgt_System\\src\\Reports\\progress_report2.jasper";
            // Parameters (if needed)
            HashMap<String, Object> parameters = new HashMap<>();
            parameters.put("studentID", studentID);

            // Fill the report
            JasperPrint print = JasperFillManager.fillReport(reportPath, parameters, con.c);

            // View the report in JasperViewer
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);
            viewer.setAlwaysOnTop(true);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error generating report: " + ex.getMessage());
        }
    
    }

    //save Grades
    public void saveGrades() {
    String studentId = txt_mat_no.getText();

    try {
        Conn con = new Conn();
        String sql = "INSERT INTO grades (student_id, course_id, grade) VALUES (?, ?, ?)";
        pst = con.c.prepareStatement(sql);

        for (int i = 0; i < tblCoursesGrades.getRowCount(); i++) {
            String courseId = tblCoursesGrades.getValueAt(i, 0).toString();
            String grade = tblCoursesGrades.getValueAt(i, 4).toString();

            pst.setString(1, studentId);
            pst.setString(2, courseId);
            pst.setString(3, grade);
            pst.executeUpdate();
        }
        JOptionPane.showMessageDialog(null, "Grades saved successfully!");
        pst.close();
        con.c.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error saving grades: " + e.getMessage());
    }
}
     //Update Grades
    public void updateGrades() {
    String studentId = txt_mat_no.getText();

    try {
        Conn con = new Conn();
        String sql = "INSERT INTO grades (student_id, course_id, grade) VALUES (?, ?, ?) " +
                     "ON DUPLICATE KEY UPDATE grade = VALUES(grade)"; // Update if exists
         pst = con.c.prepareStatement(sql);

        for (int i = 0; i < tblCoursesGrades.getRowCount(); i++) {
            String courseId = tblCoursesGrades.getValueAt(i, 0).toString();
            String grade = tblCoursesGrades.getValueAt(i, 4).toString();

            pst.setString(1, studentId);
            pst.setString(2, courseId);
            pst.setString(3, grade);
            pst.executeUpdate();
        }
        JOptionPane.showMessageDialog(null, "Grades updated successfully!");
        pst.close();
        con.c.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error updating grades: " + e.getMessage());
    }
}
    //load courses
    public void loadCoursesForStudent() {
        String studentID = txt_mat_no.getText();
    String program = txt_program.getText();  // Assuming txtProgram is the textbox for Program
    String year = txt_year.getText();  // Assuming txtYear is the textbox for Year

    DefaultTableModel model = new DefaultTableModel(new String[]{"Course ID","Course Code", "Course Name", "Credit Hours", "Grade"}, 0);
    tblCoursesGrades.setModel(model);

    try {
        Conn con = new Conn();
        String sql = "SELECT c.course_id,course_code, c.course_name,year_name,program_name, credit_hours,g.grade FROM courses c "
                + "Left Join grades g ON c.course_id=g.course_id AND g.student_id=? "
                + "Join academic_years ON c.year_id=academic_years.year_id "
                + "Join program_tbl ON c.program_id=program_tbl.program_id "
                + "WHERE program_name = ? AND year_name = ?";
        pst = con.c.prepareStatement(sql);
        pst.setString(1, studentID);
        pst.setString(2, program);
        pst.setString(3, year);
        ResultSet rs = pst.executeQuery();

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getString("course_id"),
                rs.getString("course_code"),
                rs.getString("course_name"),
                rs.getInt("credit_hours"),
                rs.getString("grade")!= null ? rs.getString("grade") : ""
                // Empty grade column for manual entry
            });
        }
        rs.close();
        pst.close();
       con.c.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error loading courses: " + e.getMessage());
    }
}
    private void fetchStudentDetails() {
    String studentID = txt_mat_no.getText().trim();
    //txt_mat_no.requestFocus();
    if (studentID.isEmpty()) {
        lblStatus.setText("Please enter a Student ID.");
        return;
    }

    try {
        Conn con = new Conn();
        String query = "SELECT concat(othername,' ',surname)AS student_name,school_name,dept_name,"
                + "program_name ,year_name FROM student_registration_tbl "
                + "Join schools_tbl ON student_registration_tbl.school=schools_tbl.school_id "
                + "Join academic_years ON student_registration_tbl.year = academic_years.year_id "
                + "Join program_tbl ON student_registration_tbl.program = program_tbl.program_id JOIN departments_tbl ON student_registration_tbl.dept_id=departments_tbl.dept_id  WHERE mat_no = ?";
        pst = con.c.prepareStatement(query);
        pst.setString(1, studentID);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            txt_othername.setText(rs.getString("student_name"));
            txt_year.setText(rs.getString("year_name"));
            txt_school.setText(rs.getString("school_name"));
            txt_department.setText(rs.getString("dept_name"));
            txt_program.setText(rs.getString("program_name"));
            lblStatus.setText("Student details loaded!");
        } else {
            lblStatus.setText("Student ID not found!");
            txt_othername.setText(""); // Clear fields
            txt_year.setText("");
            
        }

    } catch (Exception e) {
        e.printStackTrace();
        lblStatus.setText("Database error!");
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(enter_grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(enter_grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(enter_grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(enter_grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new enter_grades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel course_id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTable tblCoursesGrades;
    private javax.swing.JTextField txt_department;
    private javax.swing.JTextField txt_mat_no;
    private javax.swing.JTextField txt_othername;
    private javax.swing.JTextField txt_program;
    private javax.swing.JTextField txt_school;
    private javax.swing.JTextField txt_year;
    // End of variables declaration//GEN-END:variables
}
